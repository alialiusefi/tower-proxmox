# DB_USERNAME=postgres
# DB_DATABASE_NAME=db
# DB_PASSWORD=postgres
# CONTAINER_DATA=/mnt/user/appdata/immich
# IMMICH_VERSION=v1.131.3
name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION}
    volumes:
      - upload_path:/usr/src/app/upload
      - images_and_videos_path:/mnt/media
      - /etc/localtime:/etc/localtime:ro
    env_file: '.env'
    ports:
      - 2283:2283
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION}
#    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
#      file: hwaccel.ml.yml
#      service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    env_file: '.env'
    volumes:
      - model-cache:/cache
    restart: always
  redis:
    container_name: immich_redis
    image: registry.hub.docker.com/library/redis:6.2-alpine@sha256:84882e87b54734154586e5f8abd4dce69fe7311315e2fc6d67c29614c8de2672
    restart: always
  database:
    container_name: immich_postgres
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: db
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
volumes:
  model-cache:
  images_and_videos_path:
    driver: local
    driver_opts:
      type: none
      device: /mnt/user/ImagesAndVideos/ImagesAndVideos
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ${CONTAINER_DATA}/postgres
      o: bind
  upload_path:
    driver: local
    driver_opts:
      type: none
      device: ${CONTAINER_DATA}/upload
      o: bind
